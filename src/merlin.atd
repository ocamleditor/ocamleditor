type pos = { line : int; col : int }

type range = {
  start : pos;
  stop <json name="end"> : pos;
}

type message = { value : string }

type case_analysis_answer = [
  | Return <json name="return"> of case_analysis
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type case_analysis = { value : (range * string) }

type enclosing_answer = [
  | Return <json name="return"> of enclosing
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type enclosing = { value : range list }


type type_expression_answer = [
  | Return <json name="return"> of type_expression
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type type_expression = { value : string }


type type_enclosing_answer = [
  | Return <json name="return"> of type_enclosing
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type type_enclosing = { value : type_enclosing_value list }

type type_enclosing_value = {
  te_start <json name="start"> : pos;
  te_stop <json name="end"> : pos;
  te_type  <json name="type"> : string;
  te_tail <json name="tail"> : tail;
}

type tail = [ No <json name="no"> | Position <json name="position"> | Call <json name="call"> ] <ocaml repr="classic">


type document_answer = [
  | Return <json name="return"> of document
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type document = { value : string }



type complete_prefix_answer = [
  | Return <json name="return"> of complete_prefix
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type complete_prefix = { value : complete_prefix_value }

type complete_prefix_value = {
  ?context : (string * application_context) option;
  entries : entry list;
}

type entry = {
  name : string;
  kind : string;
  desc : string;
  info : string;
}

type label = { name : string; typ <json name="type"> : string }

type application_context = {
  argument_type : string;
  labels : label list;
}



type outline_answer = [
  | Return <json name="return"> of outline_value
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type outline_value = { value : outline list }

type outline = {
  ol_start <json name="start"> : pos;
  ol_stop <json name="end"> : pos;
  ol_name <json name="name"> : string;
  ol_kind <json name="kind"> : string;
  ol_children <json name="children"> : outline list;
}




type list_modules_answer = [
  | Return <json name="return"> of list_modules
  | Failure <json name="failure"> of message
  | Error <json name="error"> of message
  | Exception <json name="exception"> of message
] <json
  adapter.to_ocaml="Atdgen_runtime.Json_adapter.normalize_type_field \"class\""
  adapter.from_ocaml="Atdgen_runtime.Json_adapter.restore_type_field \"class\""
> <ocaml repr="classic">

type list_modules = { value : string list }






(*
type label = { name : string; typ <json name="type"> : string }

type application_context = {
  argument_type : string;
  labels : label list;
}

type entry = {
  name : string;
  kind : string;
  desc : string;
  info : string;
}

type complete_prefix = {
  context : (string * application_context) option;
  entries : entry list;
}

type outline = {
  start : pos;
  stop <json name="end"> : pos;
  name : string;
  kind : string;
  ?typ <json name="type"> : string option;
  children : outline list;
}
*)